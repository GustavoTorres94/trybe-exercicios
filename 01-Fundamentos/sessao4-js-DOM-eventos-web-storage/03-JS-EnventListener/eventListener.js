/*
############################################################ eventListener ############################################################
eventos : S√£o o que de fato d√£o dinamismo na page

pode ser disparado pelo carregamento da page ou a√ß√£o desenvolvida por mim!

DOM on-event handlers :
alert : popup que dispara quando a page √© carregada, ao fim da execu√ß√£o do pr√≥prio dom
window.onload : comando para chamar os alertas em forma de pop up

Dom in-line event handlers: Causados pelo usuario 

onclock, onmouseover, mouseout


############################################################## addeventListener ##########################################################

Anote a√≠ üìù: Voc√™ pode passar um par√¢metro para a sua fun√ß√£o que permite acessar diversos atributos do evento, como o target,
o elemento-alvo em que o evento ocorre.
Por exemplo, caso voc√™ queira capturar o valor digitado em um input, voc√™ pode usar: event.target.value.


ap√≥s o getelement ou query

.addEventListener('param1', 'param2') => 
---> param1 = o local da a√ß√£o, vamos dizer assim, onde voce quer que seja disparado o param 2

---> param2 = uma function que vai ser disparada assim que o param1 detectar o evento. 

addEvenListener(eventoDeOrigem) tem 2 ""retornos""
eventoDeOrigem.target = onde foi capturado o evento
eventoDeOrigem.tpe = o tipo de evento utilizado para captura!


## pode ser declarado v√°rios eventos para o mesmo elemento!! ##


*/